// Generated by view binder compiler. Do not edit!
package com.example.recently.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.example.recently.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class OrderitemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView orderitemname;

  @NonNull
  public final TextView orderitemnote;

  @NonNull
  public final TextView orderitemnumber;

  @NonNull
  public final TextView orderitemtotal;

  private OrderitemBinding(@NonNull LinearLayout rootView, @NonNull TextView orderitemname,
      @NonNull TextView orderitemnote, @NonNull TextView orderitemnumber,
      @NonNull TextView orderitemtotal) {
    this.rootView = rootView;
    this.orderitemname = orderitemname;
    this.orderitemnote = orderitemnote;
    this.orderitemnumber = orderitemnumber;
    this.orderitemtotal = orderitemtotal;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static OrderitemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static OrderitemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.orderitem, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static OrderitemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.orderitemname;
      TextView orderitemname = rootView.findViewById(id);
      if (orderitemname == null) {
        break missingId;
      }

      id = R.id.orderitemnote;
      TextView orderitemnote = rootView.findViewById(id);
      if (orderitemnote == null) {
        break missingId;
      }

      id = R.id.orderitemnumber;
      TextView orderitemnumber = rootView.findViewById(id);
      if (orderitemnumber == null) {
        break missingId;
      }

      id = R.id.orderitemtotal;
      TextView orderitemtotal = rootView.findViewById(id);
      if (orderitemtotal == null) {
        break missingId;
      }

      return new OrderitemBinding((LinearLayout) rootView, orderitemname, orderitemnote,
          orderitemnumber, orderitemtotal);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
